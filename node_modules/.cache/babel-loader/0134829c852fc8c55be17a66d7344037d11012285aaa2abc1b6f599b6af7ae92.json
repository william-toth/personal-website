{"ast":null,"code":"var _jsxFileName = \"/Users/williamtoth/Desktop/web_dev/will/src/components/terminal.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Terminal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      introArray: []\n    };\n  }\n  componentDidMount() {\n    // Data to import from sanity\n    const starterArray = [\"The very first line that needs to finish typing before going to the next line\", \"The second line that needs to start being typed after the first line\"];\n    const createTypingEffect = async (text, index) => {\n      return Promise.all(text.split(\"\").map((c, i) => new Promise(res => {\n        setTimeout(() => {\n          let arrayCopy = this.state.introArray.slice();\n          this.setState(state => ({\n            introArray: [...state.introArray.slice(0, index), arrayCopy[index] + c, ...state.introArray.slice(index + 1)]\n          }));\n          res(null);\n        }, 200 * i);\n      })));\n    };\n    const cycle = async () => {\n      let i = 0;\n      for (const starterText of starterArray) {\n        // Setting empty string for each line in starterArray so we dont get undefined as first character\n        this.setState(state => ({\n          introArray: [...state.introArray, \"\"]\n        }));\n        await createTypingEffect(starterText, i);\n        i++;\n      }\n    };\n    cycle();\n  }\n  render() {\n    console.log(this.state.introArray);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 h-1/2 p-5 flex items-start justify-start bg-clip-padding bg-slate-900 backdrop-filter backdrop-blur-xl bg-opacity-60 border border-gray-900 rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: this.state.introArray.map((introLine, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white\",\n            children: introLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Terminal;","map":{"version":3,"names":["React","Terminal","Component","constructor","props","state","introArray","componentDidMount","starterArray","createTypingEffect","text","index","Promise","all","split","map","c","i","res","setTimeout","arrayCopy","slice","setState","cycle","starterText","render","console","log","introLine"],"sources":["/Users/williamtoth/Desktop/web_dev/will/src/components/terminal.js"],"sourcesContent":["import React from \"react\";\n\n\nclass Terminal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            introArray: []\n        }\n    }\n\n  componentDidMount() {\n    // Data to import from sanity\n    const starterArray = [\n      \"The very first line that needs to finish typing before going to the next line\",\n      \"The second line that needs to start being typed after the first line\"\n    ];\n\n    const createTypingEffect = async (text, index) => {\n      return Promise.all(\n        text.split(\"\").map(\n          (c, i) =>\n            new Promise((res) => {\n              setTimeout(() => {\n                let arrayCopy = this.state.introArray.slice();\n                this.setState((state) => ({\n                  introArray: [\n                    ...state.introArray.slice(0, index),\n                    arrayCopy[index] + c,\n                    ...state.introArray.slice(index + 1)\n                  ]\n                }));\n                res(null);\n              }, 200 * i);\n            })\n        )\n      );\n    };\n\n    const cycle = async () => {\n      let i = 0;\n      for (const starterText of starterArray) {\n        // Setting empty string for each line in starterArray so we dont get undefined as first character\n        this.setState((state) => ({\n          introArray: [...state.introArray, \"\"]\n        }));\n\n        await createTypingEffect(starterText, i);\n        i++;\n      }\n    };\n\n    cycle();\n  }\n  render() {\n    console.log(this.state.introArray);\n    return (\n      <div className=\"w-1/2 h-1/2 p-5 flex items-start justify-start bg-clip-padding bg-slate-900 backdrop-filter backdrop-blur-xl bg-opacity-60 border border-gray-900 rounded\">\n        <div className=\"flex flex-col\">\n          {this.state.introArray.map((introLine, index) => (\n            <div className=\"flex items-center\" key={index}>\n              <p className=\"text-white\">{introLine}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Terminal;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAG1B,MAAMC,QAAQ,SAASD,KAAK,CAACE,SAAS,CAAC;EACnCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,UAAU,EAAE;IAChB,CAAC;EACL;EAEFC,iBAAiB,GAAG;IAClB;IACA,MAAMC,YAAY,GAAG,CACnB,+EAA+E,EAC/E,sEAAsE,CACvE;IAED,MAAMC,kBAAkB,GAAG,OAAOC,IAAI,EAAEC,KAAK,KAAK;MAChD,OAAOC,OAAO,CAACC,GAAG,CAChBH,IAAI,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAChB,CAACC,CAAC,EAAEC,CAAC,KACH,IAAIL,OAAO,CAAEM,GAAG,IAAK;QACnBC,UAAU,CAAC,MAAM;UACf,IAAIC,SAAS,GAAG,IAAI,CAACf,KAAK,CAACC,UAAU,CAACe,KAAK,EAAE;UAC7C,IAAI,CAACC,QAAQ,CAAEjB,KAAK,KAAM;YACxBC,UAAU,EAAE,CACV,GAAGD,KAAK,CAACC,UAAU,CAACe,KAAK,CAAC,CAAC,EAAEV,KAAK,CAAC,EACnCS,SAAS,CAACT,KAAK,CAAC,GAAGK,CAAC,EACpB,GAAGX,KAAK,CAACC,UAAU,CAACe,KAAK,CAACV,KAAK,GAAG,CAAC,CAAC;UAExC,CAAC,CAAC,CAAC;UACHO,GAAG,CAAC,IAAI,CAAC;QACX,CAAC,EAAE,GAAG,GAAGD,CAAC,CAAC;MACb,CAAC,CAAC,CACL,CACF;IACH,CAAC;IAED,MAAMM,KAAK,GAAG,YAAY;MACxB,IAAIN,CAAC,GAAG,CAAC;MACT,KAAK,MAAMO,WAAW,IAAIhB,YAAY,EAAE;QACtC;QACA,IAAI,CAACc,QAAQ,CAAEjB,KAAK,KAAM;UACxBC,UAAU,EAAE,CAAC,GAAGD,KAAK,CAACC,UAAU,EAAE,EAAE;QACtC,CAAC,CAAC,CAAC;QAEH,MAAMG,kBAAkB,CAACe,WAAW,EAAEP,CAAC,CAAC;QACxCA,CAAC,EAAE;MACL;IACF,CAAC;IAEDM,KAAK,EAAE;EACT;EACAE,MAAM,GAAG;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,KAAK,CAACC,UAAU,CAAC;IAClC,oBACE;MAAK,SAAS,EAAC,2JAA2J;MAAA,uBACxK;QAAK,SAAS,EAAC,eAAe;QAAA,UAC3B,IAAI,CAACD,KAAK,CAACC,UAAU,CAACS,GAAG,CAAC,CAACa,SAAS,EAAEjB,KAAK,kBAC1C;UAAK,SAAS,EAAC,mBAAmB;UAAA,uBAChC;YAAG,SAAS,EAAC,YAAY;YAAA,UAAEiB;UAAS;YAAA;YAAA;YAAA;UAAA;QAAK,GADHjB,KAAK;UAAA;UAAA;UAAA;QAAA,QAG9C;MAAC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,eAAeV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}